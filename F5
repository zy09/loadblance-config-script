import re
import os
import csv


from f5.bigip import ManagementRoot

# Connect to the BigIP
session = ManagementRoot("192.168.1.245", "admin", "pwd")

# CAPTURE LIST OF CLIENT SSL PROFILES
client_ssls = session.tm.ltm.profile.client_ssls.get_collection()
# https:// <F5_mgmt_IP>/mgmt/tm/ltm/profile/client-ssl
listClientSsl = []
for client_ssl in client_ssls:
    listClientSsl.append(client_ssl.name)

# CAPTURE LIST OF SERVER SSL PROFILES
server_ssls = session.tm.ltm.profile.server_ssls.get_collection()
# https:// <F5_mgmt_IP>/mgmt/tm/ltm/profile/server-ssl
listServerSsl = []
for server_ssl in server_ssls:
    listServerSsl.append(server_ssl.name)

# CAPTURE VIRTUAL SERVER INFORMATION
virtuals = session.tm.ltm.virtuals.get_collection()
vs_collection = []
# https:// <F5_mgmt_IP>/mgmt/tm/ltm/virtual
for virtual in virtuals:
    vs_conf = {}
    vs_conf["vs_partition"] = virtual.partition
    vs_conf["vs_ipProtocol"] = virtual.ipProtocol
    if hasattr(virtual, 'subPath'):
        vs_conf["vs_subPath"] = virtual.subPath
    else:
         vs_conf["vs_subPath"] = "None"
    vs_conf["vs_name"] = virtual.name
    if hasattr(virtual, 'description'):
        vs_conf["vs_description"] = virtual.description

    else:
        vs_conf["vs_description"] = "None"
    vs_conf["vs_destination"] = re.search('[^\/]+$', virtual.destination).group(0)
    listClientSsl_inUse = []
    listServerSsl_inUse = []
    for profile in virtual.profiles_s.get_collection():
        # https:// <F5_mgmt_IP>/mgmt/tm/ltm/virtual/<virtual_name>/profiles
        if profile.name in listClientSsl:
            listClientSsl_inUse.append(profile.name)
        if profile.name in listServerSsl:
            listServerSsl_inUse.append(profile.name)
    if listClientSsl_inUse:
        vs_conf["vs_client_ssl"] = listClientSsl_inUse
    else:
        vs_conf["vs_client_ssl"] = "None"
    if listServerSsl_inUse:
        vs_conf["vs_server_ssl"] = listServerSsl_inUse
    else:
        vs_conf["vs_server_ssl"] = "None"
    if hasattr(virtual, 'rules'):
        vs_conf["vs_iRules"] = virtual.rules
    else:
        vs_conf["vs_iRules"] = "None"
    if hasattr(virtual, 'persist'):
        vs_conf["vs_persist"] = []
        for persist in virtual.persist:
            vs_conf["vs_persist"].append(persist['name'])
    else:
        vs_conf["vs_persist"] = "None"
    vs_conf["vs_pool"] = {}
    if hasattr(virtual, 'pool'):
        vs_conf["vs_pool"]["pool_name"] = re.search('[^\/]+$', virtual.pool).group(0)
        if hasattr(virtual, 'subPath'):
            poolName = virtual.pool.split("/")[3]
            poolSubpath = virtual.pool.split("/")[2]
            poolPartition = virtual.pool.split("/")[1]
            pool = session.tm.ltm.pools.pool.load(name=poolName, subPath=poolSubpath, partition=poolPartition)
        # https:// <F5_mgmt_IP>/mgmt/tm/ltm/pool/<pool_name>
        else:
            poolName = virtual.pool.split("/")[2]
            poolPartition = virtual.pool.split("/")[1]
            pool = session.tm.ltm.pools.pool.load(name=poolName, partition=poolPartition)
        # https:// <F5_mgmt_IP>/mgmt/tm/ltm/pool/<pool_name>
        poolMembers = pool.members_s.get_collection()
        # https:// <F5_mgmt_IP>/mgmt/tm/ltm/pool/<pool_name>/members
        if poolMembers:
            vs_conf["vs_pool"]["pool_members"] = []
            for member in poolMembers:
                vs_conf["vs_pool"]["pool_members"].append(member.name)
        else:
            vs_conf["vs_pool"]["pool_members"] = "None"
    else:
        vs_conf["vs_pool"]["pool_name"] = "None"
        vs_conf["vs_pool"]["pool_members"] = "None"
    vs_collection.append(vs_conf)

with open(os.path.join(os.path.dirname(__file__), "test_nat.csv"), 'w', newline='') as csvfile:
    fieldnames = ["VS_Partition","VS_SubPath","VS_Name","VS_Description","VS_IP:Port","VS_PROTOCOL","VS_Client_SSL","VS_Server_SSL","VS_iRules","VS_Persist","Pool","Pool_Members"]
    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
    writer.writeheader()
    for vs_conf in vs_collection:
        writer.writerow({
            "VS_Partition": vs_conf["vs_partition"],
            "VS_SubPath": vs_conf["vs_subPath"],
            "VS_Name": vs_conf["vs_name"],
            "VS_Description": vs_conf["vs_description"],
            "VS_IP:Port": vs_conf["vs_destination"],
            "VS_PROTOCOL": vs_conf["vs_ipProtocol"],
            "VS_Client_SSL": vs_conf["vs_client_ssl"],
            "VS_Server_SSL": vs_conf["vs_server_ssl"],
            "VS_iRules": vs_conf["vs_iRules"],
            "VS_Persist": vs_conf["vs_persist"],
            "Pool": vs_conf["vs_pool"]["pool_name"],
            "Pool_Members": vs_conf["vs_pool"]["pool_members"],
        })
